/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.1/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

group = 'net.uweeisele.otel'
version = '0.1.0-SNAPSHOT'

sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url 'https://packages.confluent.io/maven/'
        mavenContent {
            releasesOnly()
        }
    }
}

dependencies {
    implementation platform("io.opentelemetry:opentelemetry-bom:1.27.0")
    implementation 'io.opentelemetry:opentelemetry-api'

    runtimeOnly 'io.opentelemetry:opentelemetry-exporter-otlp'
    runtimeOnly 'io.opentelemetry:opentelemetry-exporter-logging'
    //runtimeOnly 'io.opentelemetry:opentelemetry-exporter-jaeger'
    //runtimeOnly 'io.opentelemetry:opentelemetry-exporter-jaeger-thrift'
    //runtimeOnly 'io.opentelemetry:opentelemetry-exporter-zipkin'


    implementation platform('io.opentelemetry:opentelemetry-bom-alpha:1.27.0-alpha')
    implementation('io.opentelemetry:opentelemetry-semconv')
    implementation 'io.opentelemetry:opentelemetry-sdk-extension-autoconfigure'

    runtimeOnly 'io.opentelemetry:opentelemetry-exporter-prometheus'


    implementation platform("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom:1.27.0")
    implementation 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-api'

    implementation platform("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom-alpha:1.26.0-alpha")
    // https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/runtime-metrics/library
    runtimeOnly 'io.opentelemetry.instrumentation:opentelemetry-runtime-metrics'


    compileOnly 'org.slf4j:slf4j-api:1.7.36'
    compileOnly 'org.apache.kafka:kafka-clients:3.5.0'
    compileOnly 'org.apache.kafka:kafka-server-common:3.5.0'
    compileOnly 'com.yammer.metrics:metrics-core:2.2.0'

    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    testImplementation 'org.slf4j:slf4j-log4j12:1.7.36'
    testImplementation 'org.apache.kafka:kafka_2.13:3.5.0'
    testImplementation 'org.apache.kafka:kafka_2.13:3.5.0:test'
    testImplementation 'org.apache.kafka:kafka-clients:3.5.0:test'
    testImplementation 'org.apache.kafka:kafka-server-common:3.5.0:test'
    testImplementation 'org.bouncycastle:bcprov-jdk15on:1.70'
}

testing {
    suites {
        test {
            useJUnitJupiter('5.9.3')
        }
    }
}

test {
    useJUnitPlatform()

    testLogging {
        showStandardStreams = true
        exceptionFormat = "full"
    }
}

tasks.register('copyDependencies', Copy) {
    from configurations.runtimeClasspath
    into buildDir.toPath().resolve("dependencies")
}
